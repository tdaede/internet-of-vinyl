#!/bin/bash
#
### BEGIN INIT INFO
# Provides: gst-launch
# Required-Start: $syslog $network $local_fs $time $all icecast2
# Required-Stop: $syslog $network $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start gst-launch pipeline at boot time
# Description: Start gst-launch pipeline at boot time.
### END INIT INFO

PATH=/sin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/gst-launch-1.0
NAME=gst-launch
LOG=/var/log/daemon.log
HOMEDIR=/var/run
PIDFILE="$HOMEDIR/$NAME.pid"

test -f "$DAEMON" || exit 0

set -e

#OPTIONS=(audiotestsrc ! audioresample ! audioconvert ! \

OPTIONS=(alsasrc device="hw:1,0" ! \
 audio/x-raw, rate=48000, channels=2 ! opusenc bitrate=96000 ! tee name=player \
player. ! queue ! oggmux max-delay=200000000 max-page-delay=200000000 ! \
 shout2send mount=/player.opus port=8000 streamname="ART Record Player" \
  genre="All the hits" description="Streaming your vinyl live to the internet" \
  username=source password=******** ip=127.0.0.1 \
player. ! queue ! rtpopuspay ! udpsink host=127.0.0.1 port=5002)

case "$1" in
start)
  # Check the PID file exists and check the actual status of process
  PID=`ps -ef | grep "$DAEMON" | grep -v grep | awk '{print $1}'`
  if [ -n "$PID" ] ; then
    echo "$NAME is already running on PID $PID"
  else
    rm -f "$PIDFILE"
    echo -n "Starting $NAME"
    /sbin/start-stop-daemon -S -b -m -p "$PIDFILE" -C -x "$DAEMON" -- "${OPTIONS[@]}" >> "$LOG" 2>&1 || echo -n " ... already running"
    echo "."
  fi
  ;;
stop)
  echo -n "Stopping $NAME"
  /sbin/start-stop-daemon -o -K -q --remove-pidfile -p "$PIDFILE" -x "$DAEMON"
  echo "."
  ;;
restart)
  echo -n "Restarting $NAME"
  /sbin/start-stop-daemon -o -K -q --remove-pidfile -p "$PIDFILE" -x "$DAEMON"
  sleep 1
  /sbin/start-stop-daemon -S -q -b -m -p "$PIDFILE" -C -x "$DAEMON" -- "${OPTIONS[@]}" >> "$LOG" 2>&1 || echo -n " ...already running"
  echo "."
  ;;
status)
  echo -n "Status of $NAME: "
  if [ ! -r "$PIDFILE" ]; then
    echo "not running."
    exit 3
  fi
  if read pid < "$PIDFILE" && ps -p "$pid" > /dev/null 2>&1 ; then
    echo "running."
    exit 0
  fi
  echo "not running (but $PIDFILE exists)."
  exit 1
  ;;
*)
  echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}" >&2
  exit1
  ;;
esac
exit 0
